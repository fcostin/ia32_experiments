=============================
EXAMPLE MACRO-LANGAUGE INPUT:
=============================

    # macro-language example
    # note that this is just a python script

    from prelude import *

    def_macro('inc_by_one', 'x')(
        local('unused'),
        constant_add(constant(1), 'x'),
    )

    def_macro('inc_by_seven', 'a')(
        macro('inc_by_one', 'a'),
        constant_add(constant(4), 'a'),
        macro('inc_by_one', 'a'),
        macro('inc_by_one', 'a'),
    )

    def_macro('main')(
        local('x'),
        get_char('x'),
        macro('inc_by_seven', 'x'),
        put_char('x'),
        put_string_constant(string_constant('hello world!\n')),
        put_string_constant(string_constant('input a digit:\n')),
        local('n'),
        get_char('n'),
        constant_sub(char_constant('0'), 'n'),
        while_nonzero('n')(
            constant_sub(constant(1), 'n'),
            put_string_constant(string_constant('boogaloo!\n')),
        ),
    )

    # hook to start compilation process ...
    debug_dump()


=============================
EXAMPLE OUTPUT FROM COMPILER:
=============================

    _BUILT_IN_MACROS:
        as_logical
        begin_loop
        clear
        constant_add
        constant_sub
        copy
        destructive_add
        destructive_sub
        end_loop
        get_char
        local
        logical_and
        logical_not
        logical_or
        move
        put_char
        put_string_constant
        stack_add
        stack_sub
    _USER_MACROS:
        inc_by_one:
            args: ('x',)
            body:
                ('macro_call', 'local', ('unused',))
                ('macro_call', 'constant_add', (('constant', 1), 'x'))
            locals: ['unused']
        inc_by_seven:
            args: ('a',)
            body:
                ('macro_call', 'inc_by_one', ('a',))
                ('macro_call', 'constant_add', (('constant', 4), 'a'))
                ('macro_call', 'inc_by_one', ('a',))
                ('macro_call', 'inc_by_one', ('a',))
            locals: []
        main:
            args: ()
            body:
                ('macro_call', 'local', ('x',))
                ('macro_call', 'get_char', ('x',))
                ('macro_call', 'inc_by_seven', ('x',))
                ('macro_call', 'put_char', ('x',))
                ('macro_call', 'put_string_constant', (('string_constant', 'hello world!\n'),))
                ('macro_call', 'put_string_constant', (('string_constant', 'input a digit:\n'),))
                ('macro_call', 'local', ('n',))
                ('macro_call', 'get_char', ('n',))
                ('macro_call', 'constant_sub', (('constant', 48), 'n'))
                ('macro_call', 'begin_loop', ('n',))
                ('macro_call', 'constant_sub', (('constant', 1), 'n'))
                ('macro_call', 'put_string_constant', (('string_constant', 'boogaloo!\n'),))
                ('macro_call', 'end_loop', ('n',))
            locals: ['x', 'n']
    COMPILING MAIN MACRO...
    compiler pass 1: reducing main macro
    expanding user macro ...
    expanding user macro ...
    expanding user macro ...
    expanding user macro ...
    compiler pass 2: generating code
    OK
    REDUCED FORM OF MAIN MACRO:
        main:
            args: ()
            body:
                ('allocate_var', 'x_0')
                ('macro_call', 'get_char', [('var', 'x_0')])
                ('allocate_var', 'unused_2')
                ('macro_call', 'constant_add', [('constant', 1), ('var', 'x_0')])
                ('destroy_var', 'unused_2')
                ('macro_call', 'constant_add', [('constant', 4), ('var', 'x_0')])
                ('allocate_var', 'unused_3')
                ('macro_call', 'constant_add', [('constant', 1), ('var', 'x_0')])
                ('destroy_var', 'unused_3')
                ('allocate_var', 'unused_4')
                ('macro_call', 'constant_add', [('constant', 1), ('var', 'x_0')])
                ('destroy_var', 'unused_4')
                ('macro_call', 'put_char', [('var', 'x_0')])
                ('macro_call', 'put_string_constant', [('string_constant', 'hello world!\n')])
                ('macro_call', 'put_string_constant', [('string_constant', 'input a digit:\n')])
                ('allocate_var', 'n_1')
                ('macro_call', 'get_char', [('var', 'n_1')])
                ('macro_call', 'constant_sub', [('constant', 48), ('var', 'n_1')])
                ('macro_call', 'begin_loop', [('var', 'n_1')])
                ('macro_call', 'constant_sub', [('constant', 1), ('var', 'n_1')])
                ('macro_call', 'put_string_constant', [('string_constant', 'boogaloo!\n')])
                ('macro_call', 'end_loop', [('var', 'n_1')])
                ('destroy_var', 'x_0')
                ('destroy_var', 'n_1')
            locals: []
    BRAINFUCK CODE:
    ,+++++++.>[-]+++++++++++++++++
    ++++++++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++
    +++++++++++++++++++++++++++.--
    -.+++++++..+++.---------------
    ------------------------------
    ------------------------------
    ----.+++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++
    ++.--------.+++.------.-------
    -.----------------------------
    ------------------------------
    ---------.--------------------
    ---.[-]+++++++++++++++++++++++
    ++++++++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++
    ++++++++++++++++++++++.+++++.+
    +.+++++.-.--------------------
    ------------------------------
    ------------------------------
    ----.+++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++
    ++++++++++.-------------------
    ------------------------------
    ----------------.+++++++++++++
    ++++++++++++++++++++++++++++++
    +++++++++++++++++++++++++.++++
    +.--.++.+++++++++++.----------
    ------------------------------
    ------------------.-----------
    ------------------------------
    -------.,---------------------
    ---------------------------[->
    [-]+++++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++
    +++++++++++.+++++++++++++..---
    -----.------.+++++++++++.+++..
    ------------------------------
    ------------------------------
    ------------------.-----------
    ------------.<]

